@using FantasyAuction.Client.Entities
@inject AlertService AlertService

<style>
    .alert-service {
        position: absolute;
        top: 4rem;
        right: 2rem;
    }

    .alert-service span {
        display: block;
        width: 20rem;
        line-height: 2.2rem;
        text-align: right;
        padding: 0.8rem;
        margin: 0.4em;
    }


    .alert {
        border-style: solid;
        border-width: 0 1px 4px 1px
    }

    .alert-primary {
        color: #004085;
        background-color: #158CBA;
        border-color: #b8daff;
    }

    .alert-secondary {
        color: #383d41;
        background-color: #e2e3e5;
        border-color: #d6d8db;
    }

    .alert-success {
        color: #155724;
        background-color: #d4edda;
        border-color: #c3e6cb;
    }

    .alert-danger {
        color: #721c24;
        background-color: #f8d7da;
        border-color: #f5c6cb;
    }

    .alert-warning {
        color: #856404;
        background-color: #fff3cd;
        border-color: #ffeeba;
    }

    .alert-info {
        color: #0c5460;
        background-color: #d1ecf1;
        border-color: #bee5eb;
    }

    .alert-light {
        color: #818182;
        background-color: #fefefe;
        border-color: #fdfdfe;
    }

    .alert-dark {
        color: #1b1e21;
        background-color: #d6d8d9;
        border-color: #c6c8ca;
    }
</style>

<div class="alert-service">
    @for (int c = 0; c < AlertService.Messages.Count; c++)
    {
        <span class="alert @getAlertClass(AlertService.Messages[c])">@AlertService.Messages[c].Message</span>
    }
</div>

@code {

    protected override void OnInitialized()
    {
        Console.WriteLine("AlertComponent:Initializied");
        AlertService.RefreshRequested += Refresh;
    }

    private String getAlertClass(IAlert alert)
    {
        return $"alert-{alert.AlertType.ToString().ToLower()}";
    }

    private void Refresh()
    {
        Console.WriteLine("AlertComponent:refreshing");
        StateHasChanged();
    }

}