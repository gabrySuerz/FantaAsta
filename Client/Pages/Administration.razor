@page "/administration"
@using FantasyAuction.Shared
@using BlazorTable
@inject HttpClient Http

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-12">
            <button class="btn btn-primary"
                    @onclick="StartAutomaticAuction">
                Inizio asta automatica
            </button>
            <button class="btn btn-primary"
                    @onclick="RefreshPlayers">
                Ricarica giocatori
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            @if (Players == null)
            {
                <p>
                    <em>Loading...</em>
                </p>
            }
            else
            {
                <Table TableItem="Player" Items="Players" PageSize="15">
                    <Column TableItem="Player" Title="Immagine" Field="@(x => x.Img)" Sortable="true" Filterable="true" Width="25%">
                        <Template>
                            <img src="@context.Img" />
                        </Template>
                    </Column>
                    <Column TableItem="Player" Title="Nome" Field="@(x => x.Nome)" Sortable="true" Filterable="true" Width="20%" />
                    <Column TableItem="Player" Title="Prezzo" Field="@(x => x.Costo)" Sortable="true" Filterable="true" Width="20%" />
                    <Column TableItem="Player" Title="Squadra" Field="@(x => x.Squadra.Nome)" Sortable="true" Filterable="true" Width="20%" />
                    <Pager ShowPageNumber="true" ShowTotalCount="true" />
                </Table>
            }
        </div>
    </div>
</div>

@code {
    public Player[] Players;
    public bool AuctionState;
    public string FilterText;

    protected override async Task OnInitializedAsync()
    {
        Players = await Http.GetFromJsonAsync<Player[]>("api/Auction/GetPlayers");
    }

    private async void StartAutomaticAuction()
    {
        await Http.PatchAsync($"api/Auction/StartAuction", null);
    }

    private async void StartPlayerNegotiation(string playerId)
    {
        await Http.PatchAsync($"api/Auction/StartPlayerNegotiation/{playerId}", null);
    }

    private async void RefreshPlayers()
    {
        await Http.PatchAsync($"api/Auction/RefreshPlayersData", null);
    }

}
